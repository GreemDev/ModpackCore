import java.text.DateFormat

buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/maven' }
        maven { url = 'https://maven.parchmentmc.org' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
        // Make sure this version matches the one included in Kotlin for Forge
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.6.10'
        classpath 'org.parchmentmc:librarian:1.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'kotlin'
apply plugin: 'org.spongepowered.mixin'

apply from: 'https://raw.githubusercontent.com/thedarkcolour/KotlinForForge/site/thedarkcolour/kotlinforforge/gradle/kff-3.1.0.gradle'

version = '1.0.1'
group = 'net.greemdev'
archivesBaseName = 'greempackcore'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    // Change to your preferred mappings
    mappings channel: 'parchment', version: '2022.01.23-1.18.1'
    // Add your AccessTransformer
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            mods {
                greemmod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run/server')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'info'

            mods {
                greemmod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,LOADING,CORE'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'greemmod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            mods {
                greemmod {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include assets and data from data generators
sourceSets.main.resources { srcDirs 'src/generated/resources/' }

repositories {
    mavenCentral()
}

mixin {
    add sourceSets.main, 'greem.mixins.refmap.json'
    config 'greem.mixins.json'
    disableOverwriteChecker()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18.1-39.0.45'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest({
        it.attributes([
                'Specification-Title': "greemmod",
                'Specification-Vendor': "GreemDev",
                'Specification-Version': "1", // We are version 1 of ourselves
                'Implementation-Title': project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor' :"GreemDev",
                'Implementation-Timestamp': DateFormat.getDateTimeInstance().format(new Date())
        ])
    } as Action<Manifest>)
}
